TokenNumber	LineNumber	TokenType	    TokenValue
1		1		CONST               const
2		1		IDENTIFIER          Symbol
3		1		EQU                 =
4		1		CONST_CHAR          c
5		1		COMMA               ,
6		1		IDENTIFIER          ten
7		1		EQU                 =
8		1		CONST_INTEGER       10
9		1		SEMICOLON           ;
10		2		VAR                 var
11		2		IDENTIFIER          seq
12		2		COLON               :
13		2		ARRAY               array
14		2		LEFT_BRACKET        [
15		2		CONST_INTEGER       10
16		2		RIGHT_BRACKET       ]
17		2		OF                  of
18		2		RW_INTEGER          integer
19		2		SEMICOLON           ;
20		3		IDENTIFIER          lastChar
21		3		COLON               :
22		3		RW_CHAR             char
23		3		SEMICOLON           ;
24		4		PROCEDURE           procedure
25		4		IDENTIFIER          Print
26		4		LEFT_PAREN          (
27		4		RIGHT_PAREN         )
28		4		SEMICOLON           ;
29		5		BEGIN               begin
30		6		WRITE               write
31		6		LEFT_PAREN          (
32		6		CONST_STRING        print calling
33		6		RIGHT_PAREN         )
34		6		SEMICOLON           ;
35		7		WRITE               write
36		7		LEFT_PAREN          (
37		7		IDENTIFIER          lastChar
38		7		RIGHT_PAREN         )
39		7		SEMICOLON           ;
40		8		WRITE               write
41		8		LEFT_PAREN          (
42		8		IDENTIFIER          seq
43		8		LEFT_BRACKET        [
44		8		CONST_INTEGER       5
45		8		RIGHT_BRACKET       ]
46		8		RIGHT_PAREN         )
47		8		SEMICOLON           ;
48		9		END                 end
49		9		SEMICOLON           ;
50		11		BEGIN               begin
51		12		IDENTIFIER          seq
52		12		LEFT_BRACKET        [
53		12		CONST_INTEGER       5
54		12		RIGHT_BRACKET       ]
55		12		ASSIGN              :=
56		12		CONST_INTEGER       5
57		12		SEMICOLON           ;
58		13		WRITE               write
59		13		LEFT_PAREN          (
60		13		IDENTIFIER          seq
61		13		LEFT_BRACKET        [
62		13		CONST_INTEGER       5
63		13		RIGHT_BRACKET       ]
64		13		RIGHT_PAREN         )
65		13		SEMICOLON           ;
66		14		WRITE               write
67		14		LEFT_PAREN          (
68		14		CONST_INTEGER       1
69		14		RIGHT_PAREN         )
70		14		SEMICOLON           ;
71		15		WRITE               write
72		15		LEFT_PAREN          (
73		15		LEFT_PAREN          (
74		15		CONST_CHAR          a
75		15		PLUS                +
76		15		CONST_INTEGER       1
77		15		RIGHT_PAREN         )
78		15		MUL                 *
79		15		CONST_INTEGER       6
80		15		DIV                 /
81		15		CONST_INTEGER       2
82		15		PLUS                +
83		15		CONST_INTEGER       3
84		15		MUL                 *
85		15		CONST_INTEGER       8
86		15		RIGHT_PAREN         )
87		15		SEMICOLON           ;
88		16		IDENTIFIER          lastChar
89		16		ASSIGN              :=
90		16		CONST_CHAR          m
91		16		SEMICOLON           ;
92		17		IDENTIFIER          Print
93		17		LEFT_PAREN          (
94		17		RIGHT_PAREN         )
95		17		SEMICOLON           ;
96		18		WRITE               write
97		18		LEFT_PAREN          (
98		18		IDENTIFIER          lastChar
99		18		RIGHT_PAREN         )
100		18		SEMICOLON           ;
101		19		WRITE               write
102		19		LEFT_PAREN          (
103		19		IDENTIFIER          Symbol
104		19		RIGHT_PAREN         )
105		19		SEMICOLON           ;
106		20		WRITE               write
107		20		LEFT_PAREN          (
108		20		IDENTIFIER          Symbol
109		20		PLUS                +
110		20		IDENTIFIER          ten
111		20		PLUS                +
112		20		IDENTIFIER          seq
113		20		LEFT_BRACKET        [
114		20		CONST_INTEGER       5
115		20		RIGHT_BRACKET       ]
116		20		RIGHT_PAREN         )
117		20		SEMICOLON           ;
118		21		WRITE               write
119		21		LEFT_PAREN          (
120		21		CONST_STRING        I like writing
121		21		RIGHT_PAREN         )
122		22		END                 end
123		22		PERIOD              .
