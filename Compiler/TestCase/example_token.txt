TokenNumber	LineNumber	TokenType	    TokenValue
1		1		CONST               const
2		1		IDENTIFIER          Symbol
3		1		EQU                 =
4		1		CONST_CHAR          c
5		1		COMMA               ,
6		1		IDENTIFIER          ten
7		1		EQU                 =
8		1		CONST_INTEGER       10
9		1		SEMICOLON           ;
10		2		VAR                 var
11		2		IDENTIFIER          seq
12		2		COLON               :
13		2		ARRAY               array
14		2		LEFT_BRACKET        [
15		2		CONST_INTEGER       10
16		2		RIGHT_BRACKET       ]
17		2		OF                  of
18		2		RW_INTEGER          integer
19		2		SEMICOLON           ;
20		3		IDENTIFIER          lastChar
21		3		COLON               :
22		3		RW_CHAR             char
23		3		SEMICOLON           ;
24		4		PROCEDURE           procedure
25		4		IDENTIFIER          Print
26		4		LEFT_PAREN          (
27		4		RIGHT_PAREN         )
28		4		SEMICOLON           ;
29		5		BEGIN               begin
30		6		WRITE               write
31		6		LEFT_PAREN          (
32		6		CONST_STRING        print calling
33		6		RIGHT_PAREN         )
34		6		SEMICOLON           ;
35		7		WRITE               write
36		7		LEFT_PAREN          (
37		7		IDENTIFIER          lastChar
38		7		RIGHT_PAREN         )
39		7		SEMICOLON           ;
40		8		WRITE               write
41		8		LEFT_PAREN          (
42		8		IDENTIFIER          seq
43		8		LEFT_BRACKET        [
44		8		CONST_INTEGER       5
45		8		RIGHT_BRACKET       ]
46		8		RIGHT_PAREN         )
47		8		SEMICOLON           ;
48		9		END                 end
49		9		SEMICOLON           ;
50		11		BEGIN               begin
51		12		IDENTIFIER          lastChar
52		12		ASSIGN              :=
53		12		CONST_CHAR          m
54		12		SEMICOLON           ;
55		13		IDENTIFIER          seq
56		13		LEFT_BRACKET        [
57		13		CONST_INTEGER       4
58		13		RIGHT_BRACKET       ]
59		13		ASSIGN              :=
60		13		IDENTIFIER          lastChar
61		13		SEMICOLON           ;
62		14		IDENTIFIER          seq
63		14		LEFT_BRACKET        [
64		14		CONST_INTEGER       5
65		14		RIGHT_BRACKET       ]
66		14		ASSIGN              :=
67		14		CONST_INTEGER       5
68		14		SEMICOLON           ;
69		15		WRITE               write
70		15		LEFT_PAREN          (
71		15		IDENTIFIER          seq
72		15		LEFT_BRACKET        [
73		15		CONST_INTEGER       4
74		15		RIGHT_BRACKET       ]
75		15		RIGHT_PAREN         )
76		15		SEMICOLON           ;
77		16		WRITE               write
78		16		LEFT_PAREN          (
79		16		IDENTIFIER          seq
80		16		LEFT_BRACKET        [
81		16		CONST_INTEGER       5
82		16		RIGHT_BRACKET       ]
83		16		RIGHT_PAREN         )
84		16		SEMICOLON           ;
85		17		WRITE               write
86		17		LEFT_PAREN          (
87		17		CONST_INTEGER       1
88		17		RIGHT_PAREN         )
89		17		SEMICOLON           ;
90		18		WRITE               write
91		18		LEFT_PAREN          (
92		18		LEFT_PAREN          (
93		18		CONST_CHAR          a
94		18		PLUS                +
95		18		CONST_INTEGER       1
96		18		RIGHT_PAREN         )
97		18		MUL                 *
98		18		CONST_INTEGER       6
99		18		DIV                 /
100		18		CONST_INTEGER       2
101		18		PLUS                +
102		18		CONST_INTEGER       3
103		18		MUL                 *
104		18		CONST_INTEGER       8
105		18		RIGHT_PAREN         )
106		18		SEMICOLON           ;
107		20		IDENTIFIER          Print
108		20		LEFT_PAREN          (
109		20		RIGHT_PAREN         )
110		20		SEMICOLON           ;
111		21		WRITE               write
112		21		LEFT_PAREN          (
113		21		IDENTIFIER          lastChar
114		21		RIGHT_PAREN         )
115		21		SEMICOLON           ;
116		22		WRITE               write
117		22		LEFT_PAREN          (
118		22		IDENTIFIER          Symbol
119		22		RIGHT_PAREN         )
120		22		SEMICOLON           ;
121		23		WRITE               write
122		23		LEFT_PAREN          (
123		23		IDENTIFIER          Symbol
124		23		PLUS                +
125		23		IDENTIFIER          ten
126		23		PLUS                +
127		23		IDENTIFIER          seq
128		23		LEFT_BRACKET        [
129		23		CONST_INTEGER       5
130		23		RIGHT_BRACKET       ]
131		23		RIGHT_PAREN         )
132		23		SEMICOLON           ;
133		24		WRITE               write
134		24		LEFT_PAREN          (
135		24		CONST_STRING        I like writing
136		24		RIGHT_PAREN         )
137		25		END                 end
138		25		PERIOD              .
