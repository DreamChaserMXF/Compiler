TokenNumber	LineNumber	TokenType	    TokenValue
1		1		VAR                 var
2		1		IDENTIFIER          i
3		1		COMMA               ,
4		1		IDENTIFIER          j
5		1		COMMA               ,
6		1		IDENTIFIER          k
7		1		COMMA               ,
8		1		IDENTIFIER          n
9		1		COMMA               ,
10		1		IDENTIFIER          result
11		1		COLON               :
12		1		RW_INTEGER          integer
13		1		SEMICOLON           ;
14		4		FUNCTION            function
15		4		IDENTIFIER          factorial
16		4		LEFT_PAREN          (
17		4		VAR                 var
18		4		IDENTIFIER          n
19		4		COLON               :
20		4		RW_INTEGER          integer
21		4		RIGHT_PAREN         )
22		4		COLON               :
23		4		RW_INTEGER          integer
24		4		SEMICOLON           ;
25		5		BEGIN               begin
26		6		IF                  if
27		6		IDENTIFIER          n
28		6		LEQ                 <=
29		6		CONST_INTEGER       1
30		7		THEN                then
31		7		IDENTIFIER          factorial
32		7		ASSIGN              :=
33		7		CONST_INTEGER       1
34		8		ELSE                else
35		9		BEGIN               begin
36		13		IDENTIFIER          result
37		13		ASSIGN              :=
38		13		IDENTIFIER          n
39		13		MUL                 *
40		13		IDENTIFIER          factorial
41		13		LEFT_PAREN          (
42		13		IDENTIFIER          n
43		13		MINUS               -
44		13		CONST_INTEGER       1
45		13		RIGHT_PAREN         )
46		13		SEMICOLON           ;
47		14		IDENTIFIER          factorial
48		14		ASSIGN              :=
49		14		IDENTIFIER          result
50		14		SEMICOLON           ;
51		15		END                 end
52		16		END                 end
53		16		SEMICOLON           ;
54		18		BEGIN               begin
55		19		WRITE               write
56		19		LEFT_PAREN          (
57		19		CONST_STRING        input a value n, output the factorial of n

58		19		RIGHT_PAREN         )
59		19		SEMICOLON           ;
60		20		READ                read
61		20		LEFT_PAREN          (
62		20		IDENTIFIER          n
63		20		RIGHT_PAREN         )
64		20		SEMICOLON           ;
65		22		IDENTIFIER          factorial
66		22		LEFT_PAREN          (
67		22		IDENTIFIER          n
68		22		RIGHT_PAREN         )
69		22		SEMICOLON           ;
70		23		IDENTIFIER          n
71		23		ASSIGN              :=
72		23		IDENTIFIER          result
73		23		SEMICOLON           ;
74		24		IF                  if
75		24		IDENTIFIER          n
76		24		GT                  >
77		24		CONST_INTEGER       0
78		25		THEN                then
79		26		WRITE               write
80		26		LEFT_PAREN          (
81		26		CONST_STRING        n! = 
82		26		COMMA               ,
83		26		IDENTIFIER          n
84		26		RIGHT_PAREN         )
85		27		ELSE                else
86		28		WRITE               write
87		28		LEFT_PAREN          (
88		28		CONST_STRING        value too large
89		28		RIGHT_PAREN         )
90		28		SEMICOLON           ;
91		30		WRITE               write
92		30		LEFT_PAREN          (
93		30		CONST_STRING        

94		30		RIGHT_PAREN         )
95		31		END                 end
96		31		PERIOD              .
