TokenNumber	LineNumber	TokenType	    TokenValue
1		1		VAR                 var
2		1		IDENTIFIER          i
3		1		COLON               :
4		1		RW_INTEGER          integer
5		1		SEMICOLON           ;
6		3		IDENTIFIER          sequence
7		3		COLON               :
8		3		ARRAY               array
9		3		LEFT_BRACKET        [
10		3		CONST_INTEGER       100
11		3		RIGHT_BRACKET       ]
12		3		OF                  of
13		3		RW_INTEGER          integer
14		3		SEMICOLON           ;
15		5		PROCEDURE           procedure
16		5		IDENTIFIER          func
17		5		LEFT_PAREN          (
18		5		RIGHT_PAREN         )
19		5		SEMICOLON           ;
20		6		VAR                 var
21		6		IDENTIFIER          sequence1
22		6		COLON               :
23		6		ARRAY               array
24		6		LEFT_BRACKET        [
25		6		CONST_INTEGER       100
26		6		RIGHT_BRACKET       ]
27		6		OF                  of
28		6		RW_INTEGER          integer
29		6		SEMICOLON           ;
30		8		BEGIN               begin
31		10		IDENTIFIER          sequence1
32		10		LEFT_BRACKET        [
33		10		CONST_INTEGER       0
34		10		RIGHT_BRACKET       ]
35		10		ASSIGN              :=
36		10		CONST_INTEGER       0
37		10		SEMICOLON           ;
38		11		IDENTIFIER          sequence1
39		11		LEFT_BRACKET        [
40		11		CONST_INTEGER       1
41		11		RIGHT_BRACKET       ]
42		11		ASSIGN              :=
43		11		CONST_INTEGER       1
44		11		SEMICOLON           ;
45		12		IDENTIFIER          sequence1
46		12		LEFT_BRACKET        [
47		12		CONST_INTEGER       2
48		12		RIGHT_BRACKET       ]
49		12		ASSIGN              :=
50		12		CONST_INTEGER       2
51		12		SEMICOLON           ;
52		13		IDENTIFIER          sequence1
53		13		LEFT_BRACKET        [
54		13		CONST_INTEGER       3
55		13		RIGHT_BRACKET       ]
56		13		ASSIGN              :=
57		13		CONST_INTEGER       3
58		13		SEMICOLON           ;
59		14		IDENTIFIER          sequence1
60		14		LEFT_BRACKET        [
61		14		CONST_INTEGER       4
62		14		RIGHT_BRACKET       ]
63		14		ASSIGN              :=
64		14		CONST_INTEGER       4
65		14		SEMICOLON           ;
66		15		IDENTIFIER          sequence1
67		15		LEFT_BRACKET        [
68		15		CONST_INTEGER       5
69		15		RIGHT_BRACKET       ]
70		15		ASSIGN              :=
71		15		CONST_INTEGER       5
72		15		SEMICOLON           ;
73		17		IDENTIFIER          sequence
74		17		LEFT_BRACKET        [
75		17		CONST_INTEGER       0
76		17		RIGHT_BRACKET       ]
77		17		ASSIGN              :=
78		17		CONST_INTEGER       0
79		17		SEMICOLON           ;
80		18		IDENTIFIER          sequence
81		18		LEFT_BRACKET        [
82		18		CONST_INTEGER       1
83		18		RIGHT_BRACKET       ]
84		18		ASSIGN              :=
85		18		CONST_INTEGER       1
86		18		SEMICOLON           ;
87		19		IDENTIFIER          sequence
88		19		LEFT_BRACKET        [
89		19		CONST_INTEGER       2
90		19		RIGHT_BRACKET       ]
91		19		ASSIGN              :=
92		19		CONST_INTEGER       2
93		19		SEMICOLON           ;
94		20		IDENTIFIER          sequence
95		20		LEFT_BRACKET        [
96		20		CONST_INTEGER       3
97		20		RIGHT_BRACKET       ]
98		20		ASSIGN              :=
99		20		CONST_INTEGER       3
100		20		SEMICOLON           ;
101		21		IDENTIFIER          sequence
102		21		LEFT_BRACKET        [
103		21		CONST_INTEGER       4
104		21		RIGHT_BRACKET       ]
105		21		ASSIGN              :=
106		21		CONST_INTEGER       4
107		21		SEMICOLON           ;
108		22		IDENTIFIER          sequence
109		22		LEFT_BRACKET        [
110		22		CONST_INTEGER       5
111		22		RIGHT_BRACKET       ]
112		22		ASSIGN              :=
113		22		CONST_INTEGER       5
114		22		SEMICOLON           ;
115		25		FOR                 for
116		25		IDENTIFIER          i
117		25		ASSIGN              :=
118		25		CONST_INTEGER       0
119		25		TO                  to
120		25		CONST_INTEGER       5
121		25		DO                  do
122		26		BEGIN               begin
123		27		WRITE               write
124		27		LEFT_PAREN          (
125		27		IDENTIFIER          sequence
126		27		LEFT_BRACKET        [
127		27		IDENTIFIER          i
128		27		RIGHT_BRACKET       ]
129		27		RIGHT_PAREN         )
130		27		SEMICOLON           ;
131		28		WRITE               write
132		28		LEFT_PAREN          (
133		28		IDENTIFIER          sequence1
134		28		LEFT_BRACKET        [
135		28		IDENTIFIER          i
136		28		RIGHT_BRACKET       ]
137		28		RIGHT_PAREN         )
138		28		SEMICOLON           ;
139		29		WRITE               write
140		29		LEFT_PAREN          (
141		29		CONST_STRING        

142		29		RIGHT_PAREN         )
143		29		SEMICOLON           ;
144		30		END                 end
145		30		SEMICOLON           ;
146		33		FOR                 for
147		33		IDENTIFIER          i
148		33		ASSIGN              :=
149		33		CONST_INTEGER       0
150		33		TO                  to
151		33		CONST_INTEGER       5
152		33		DO                  do
153		34		BEGIN               begin
154		35		IDENTIFIER          sequence
155		35		LEFT_BRACKET        [
156		35		IDENTIFIER          i
157		35		RIGHT_BRACKET       ]
158		35		ASSIGN              :=
159		35		IDENTIFIER          i
160		35		MUL                 *
161		35		CONST_INTEGER       10
162		35		SEMICOLON           ;
163		36		IDENTIFIER          sequence1
164		36		LEFT_BRACKET        [
165		36		IDENTIFIER          i
166		36		RIGHT_BRACKET       ]
167		36		ASSIGN              :=
168		36		IDENTIFIER          i
169		36		MUL                 *
170		36		CONST_INTEGER       100
171		36		SEMICOLON           ;
172		37		END                 end
173		37		SEMICOLON           ;
174		45		FOR                 for
175		45		IDENTIFIER          i
176		45		ASSIGN              :=
177		45		CONST_INTEGER       0
178		45		TO                  to
179		45		CONST_INTEGER       5
180		45		DO                  do
181		46		BEGIN               begin
182		47		WRITE               write
183		47		LEFT_PAREN          (
184		47		IDENTIFIER          sequence
185		47		LEFT_BRACKET        [
186		47		IDENTIFIER          i
187		47		RIGHT_BRACKET       ]
188		47		RIGHT_PAREN         )
189		47		SEMICOLON           ;
190		48		WRITE               write
191		48		LEFT_PAREN          (
192		48		IDENTIFIER          sequence1
193		48		LEFT_BRACKET        [
194		48		IDENTIFIER          i
195		48		RIGHT_BRACKET       ]
196		48		RIGHT_PAREN         )
197		48		SEMICOLON           ;
198		49		WRITE               write
199		49		LEFT_PAREN          (
200		49		CONST_STRING        

201		49		RIGHT_PAREN         )
202		49		SEMICOLON           ;
203		50		END                 end
204		50		SEMICOLON           ;
205		52		IDENTIFIER          i
206		52		ASSIGN              :=
207		52		IDENTIFIER          sequence
208		52		LEFT_BRACKET        [
209		52		CONST_INTEGER       5
210		52		RIGHT_BRACKET       ]
211		52		SEMICOLON           ;
212		53		WRITE               write
213		53		LEFT_PAREN          (
214		53		IDENTIFIER          i
215		53		RIGHT_PAREN         )
216		53		SEMICOLON           ;
217		54		IDENTIFIER          i
218		54		ASSIGN              :=
219		54		IDENTIFIER          sequence1
220		54		LEFT_BRACKET        [
221		54		CONST_INTEGER       5
222		54		RIGHT_BRACKET       ]
223		54		SEMICOLON           ;
224		55		WRITE               write
225		55		LEFT_PAREN          (
226		55		IDENTIFIER          i
227		55		RIGHT_PAREN         )
228		55		SEMICOLON           ;
229		56		WRITE               write
230		56		LEFT_PAREN          (
231		56		CONST_STRING        

232		56		RIGHT_PAREN         )
233		57		END                 end
234		57		SEMICOLON           ;
235		59		BEGIN               begin
236		60		IDENTIFIER          func
237		60		LEFT_PAREN          (
238		60		RIGHT_PAREN         )
239		60		SEMICOLON           ;
240		61		END                 end
241		61		PERIOD              .
