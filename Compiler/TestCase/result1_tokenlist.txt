TokenNumber	LineNumber	TokenType	    TokenValue
1		1		VAR                 var
2		1		IDENTIFIER          i
3		1		COMMA               ,
4		1		IDENTIFIER          j
5		1		COMMA               ,
6		1		IDENTIFIER          k
7		1		COMMA               ,
8		1		IDENTIFIER          n
9		1		COMMA               ,
10		1		IDENTIFIER          result
11		1		COMMA               ,
12		1		IDENTIFIER          final_res
13		1		COLON               :
14		1		RW_INTEGER          integer
15		1		SEMICOLON           ;
16		4		FUNCTION            function
17		4		IDENTIFIER          factorial
18		4		LEFT_PAREN          (
19		4		IDENTIFIER          n
20		4		COLON               :
21		4		RW_INTEGER          integer
22		4		RIGHT_PAREN         )
23		4		COLON               :
24		4		RW_INTEGER          integer
25		4		SEMICOLON           ;
26		5		BEGIN               begin
27		6		IF                  if
28		6		IDENTIFIER          n
29		6		LEQ                 <=
30		6		CONST_INTEGER       1
31		7		THEN                then
32		7		IDENTIFIER          factorial
33		7		ASSIGN              :=
34		7		CONST_INTEGER       1
35		8		ELSE                else
36		9		BEGIN               begin
37		13		IDENTIFIER          result
38		13		ASSIGN              :=
39		13		IDENTIFIER          n
40		13		MUL                 *
41		13		IDENTIFIER          factorial
42		13		LEFT_PAREN          (
43		13		IDENTIFIER          n
44		13		MINUS               -
45		13		CONST_INTEGER       1
46		13		RIGHT_PAREN         )
47		13		SEMICOLON           ;
48		14		IDENTIFIER          factorial
49		14		ASSIGN              :=
50		14		IDENTIFIER          result
51		14		SEMICOLON           ;
52		15		END                 end
53		16		END                 end
54		16		SEMICOLON           ;
55		18		BEGIN               begin
56		19		WRITE               write
57		19		LEFT_PAREN          (
58		19		CONST_STRING        input a value n, output the factorial of n

59		19		RIGHT_PAREN         )
60		19		SEMICOLON           ;
61		20		READ                read
62		20		LEFT_PAREN          (
63		20		IDENTIFIER          n
64		20		RIGHT_PAREN         )
65		20		SEMICOLON           ;
66		22		IDENTIFIER          final_res
67		22		ASSIGN              :=
68		22		IDENTIFIER          factorial
69		22		LEFT_PAREN          (
70		22		IDENTIFIER          n
71		22		RIGHT_PAREN         )
72		22		SEMICOLON           ;
73		23		IF                  if
74		23		IDENTIFIER          n
75		23		GT                  >
76		23		CONST_INTEGER       0
77		23		THEN                then
78		24		BEGIN               begin
79		25		WRITE               write
80		25		LEFT_PAREN          (
81		25		CONST_STRING        n = 
82		25		COMMA               ,
83		25		IDENTIFIER          n
84		25		RIGHT_PAREN         )
85		25		SEMICOLON           ;
86		26		WRITE               write
87		26		LEFT_PAREN          (
88		26		CONST_STRING        

89		26		RIGHT_PAREN         )
90		26		SEMICOLON           ;
91		27		WRITE               write
92		27		LEFT_PAREN          (
93		27		CONST_STRING        n! = 
94		27		COMMA               ,
95		27		IDENTIFIER          final_res
96		27		RIGHT_PAREN         )
97		27		SEMICOLON           ;
98		28		END                 end
99		29		ELSE                else
100		30		WRITE               write
101		30		LEFT_PAREN          (
102		30		CONST_STRING        value too large
103		30		RIGHT_PAREN         )
104		30		SEMICOLON           ;
105		32		WRITE               write
106		32		LEFT_PAREN          (
107		32		CONST_STRING        

108		32		RIGHT_PAREN         )
109		33		END                 end
110		33		PERIOD              .
