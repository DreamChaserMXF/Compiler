TokenNumber	LineNumber	TokenType	    TokenValue
1		1		VAR                 var
2		1		IDENTIFIER          sequence
3		1		COLON               :
4		1		ARRAY               array
5		1		LEFT_BRACKET        [
6		1		CONST_INTEGER       10
7		1		RIGHT_BRACKET       ]
8		1		OF                  of
9		1		RW_INTEGER          integer
10		1		SEMICOLON           ;
11		2		FUNCTION            function
12		2		IDENTIFIER          func
13		2		LEFT_PAREN          (
14		2		VAR                 var
15		2		IDENTIFIER          i
16		2		COMMA               ,
17		2		IDENTIFIER          j
18		2		COLON               :
19		2		RW_INTEGER          integer
20		2		RIGHT_PAREN         )
21		2		COLON               :
22		2		RW_INTEGER          integer
23		2		SEMICOLON           ;
24		3		VAR                 var
25		3		IDENTIFIER          tmp
26		3		COLON               :
27		3		RW_INTEGER          integer
28		3		SEMICOLON           ;
29		4		BEGIN               begin
30		5		IDENTIFIER          tmp
31		5		ASSIGN              :=
32		5		IDENTIFIER          i
33		5		SEMICOLON           ;
34		6		IDENTIFIER          i
35		6		ASSIGN              :=
36		6		IDENTIFIER          j
37		6		SEMICOLON           ;
38		7		IDENTIFIER          j
39		7		ASSIGN              :=
40		7		IDENTIFIER          tmp
41		7		SEMICOLON           ;
42		8		END                 end
43		8		SEMICOLON           ;
44		10		BEGIN               begin
45		11		IDENTIFIER          sequence
46		11		LEFT_BRACKET        [
47		11		CONST_INTEGER       0
48		11		RIGHT_BRACKET       ]
49		11		ASSIGN              :=
50		11		CONST_INTEGER       3
51		11		SEMICOLON           ;
52		12		IDENTIFIER          sequence
53		12		LEFT_BRACKET        [
54		12		CONST_INTEGER       1
55		12		RIGHT_BRACKET       ]
56		12		ASSIGN              :=
57		12		CONST_INTEGER       7
58		12		SEMICOLON           ;
59		13		WRITE               write
60		13		LEFT_PAREN          (
61		13		CONST_STRING        sequence[0] = 
62		13		COMMA               ,
63		13		IDENTIFIER          sequence
64		13		LEFT_BRACKET        [
65		13		CONST_INTEGER       0
66		13		RIGHT_BRACKET       ]
67		13		RIGHT_PAREN         )
68		13		SEMICOLON           ;
69		14		WRITE               write
70		14		LEFT_PAREN          (
71		14		CONST_STRING        sequence[1] = 
72		14		COMMA               ,
73		14		IDENTIFIER          sequence
74		14		LEFT_BRACKET        [
75		14		CONST_INTEGER       1
76		14		RIGHT_BRACKET       ]
77		14		RIGHT_PAREN         )
78		14		SEMICOLON           ;
79		15		IDENTIFIER          func
80		15		LEFT_PAREN          (
81		15		IDENTIFIER          sequence
82		15		LEFT_BRACKET        [
83		15		CONST_INTEGER       0
84		15		RIGHT_BRACKET       ]
85		15		COMMA               ,
86		15		IDENTIFIER          sequence
87		15		LEFT_BRACKET        [
88		15		CONST_INTEGER       1
89		15		RIGHT_BRACKET       ]
90		15		RIGHT_PAREN         )
91		15		SEMICOLON           ;
92		16		WRITE               write
93		16		LEFT_PAREN          (
94		16		CONST_STRING        
after swap, sequence[0] = 
95		16		COMMA               ,
96		16		IDENTIFIER          sequence
97		16		LEFT_BRACKET        [
98		16		CONST_INTEGER       0
99		16		RIGHT_BRACKET       ]
100		16		RIGHT_PAREN         )
101		16		SEMICOLON           ;
102		17		WRITE               write
103		17		LEFT_PAREN          (
104		17		CONST_STRING        sequence[1] = 
105		17		COMMA               ,
106		17		IDENTIFIER          sequence
107		17		LEFT_BRACKET        [
108		17		CONST_INTEGER       1
109		17		RIGHT_BRACKET       ]
110		17		RIGHT_PAREN         )
111		17		SEMICOLON           ;
112		18		WRITE               write
113		18		LEFT_PAREN          (
114		18		CONST_STRING        

115		18		RIGHT_PAREN         )
116		18		SEMICOLON           ;
117		19		END                 end
118		19		PERIOD              .
