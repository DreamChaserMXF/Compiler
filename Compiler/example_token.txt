TokenNumber	LineNumber	TokenType	    TokenValue
1		1		CONST               const
2		1		IDENTIFIER          ARRLEN
3		1		EQU                 =
4		1		CONST_INTEGER       100
5		1		COMMA               ,
6		1		IDENTIFIER          NEGATIVE
7		1		EQU                 =
8		1		CONST_INTEGER       -1
9		1		COMMA               ,
10		1		IDENTIFIER          TRUE
11		1		EQU                 =
12		1		CONST_INTEGER       1
13		1		COMMA               ,
14		1		IDENTIFIER          FALSE
15		1		EQU                 =
16		1		CONST_INTEGER       0
17		1		COMMA               ,
18		1		IDENTIFIER          ENDCHAR
19		1		EQU                 =
20		1		CONST_CHAR          a
21		1		SEMICOLON           ;
22		3		VAR                 var
23		3		IDENTIFIER          i
24		3		COMMA               ,
25		3		IDENTIFIER          j
26		3		COMMA               ,
27		3		IDENTIFIER          k
28		3		COLON               :
29		3		RW_INTEGER          integer
30		3		SEMICOLON           ;
31		4		IDENTIFIER          lastChar
32		4		COLON               :
33		4		RW_CHAR             char
34		4		SEMICOLON           ;
35		5		IDENTIFIER          sum
36		5		COLON               :
37		5		RW_INTEGER          integer
38		5		SEMICOLON           ;
39		6		IDENTIFIER          sequence
40		6		COLON               :
41		6		ARRAY               array
42		6		LEFT_BRACKET        [
43		6		CONST_INTEGER       100
44		6		RIGHT_BRACKET       ]
45		6		OF                  of
46		6		RW_INTEGER          integer
47		6		SEMICOLON           ;
48		9		PROCEDURE           procedure
49		9		IDENTIFIER          sumP
50		9		LEFT_PAREN          (
51		9		IDENTIFIER          x
52		9		COMMA               ,
53		9		IDENTIFIER          y
54		9		COLON               :
55		9		RW_CHAR             char
56		9		SEMICOLON           ;
57		9		VAR                 var
58		9		IDENTIFIER          result
59		9		COLON               :
60		9		RW_INTEGER          integer
61		9		RIGHT_PAREN         )
62		9		SEMICOLON           ;
63		10		VAR                 var
64		10		IDENTIFIER          tempSumP
65		10		COLON               :
66		10		RW_INTEGER          integer
67		10		SEMICOLON           ;
68		11		BEGIN               begin
69		12		IDENTIFIER          result
70		12		ASSIGN              :=
71		12		MINUS               -
72		12		IDENTIFIER          x
73		12		PLUS                +
74		12		IDENTIFIER          y
75		13		END                 end
76		13		SEMICOLON           ;
77		15		FUNCTION            function
78		15		IDENTIFIER          sumF
79		15		LEFT_PAREN          (
80		15		IDENTIFIER          x
81		15		COMMA               ,
82		15		IDENTIFIER          y
83		15		COLON               :
84		15		RW_INTEGER          integer
85		15		RIGHT_PAREN         )
86		15		COLON               :
87		15		RW_INTEGER          integer
88		15		SEMICOLON           ;
89		16		VAR                 var
90		16		IDENTIFIER          result
91		16		COLON               :
92		16		RW_INTEGER          integer
93		16		SEMICOLON           ;
94		17		PROCEDURE           procedure
95		17		IDENTIFIER          sumFF
96		17		LEFT_PAREN          (
97		17		IDENTIFIER          x
98		17		COMMA               ,
99		17		IDENTIFIER          y
100		17		COLON               :
101		17		RW_INTEGER          integer
102		17		RIGHT_PAREN         )
103		17		SEMICOLON           ;
104		18		VAR                 var
105		18		IDENTIFIER          z
106		18		COLON               :
107		18		RW_INTEGER          integer
108		18		SEMICOLON           ;
109		19		BEGIN               begin
110		20		IDENTIFIER          z
111		20		ASSIGN              :=
112		20		IDENTIFIER          x
113		20		PLUS                +
114		20		IDENTIFIER          y
115		20		PLUS                +
116		20		CONST_INTEGER       1
117		20		PLUS                +
118		20		IDENTIFIER          x
119		20		PLUS                +
120		20		IDENTIFIER          y
121		21		END                 end
122		21		SEMICOLON           ;
123		22		BEGIN               begin
124		23		IDENTIFIER          result
125		23		ASSIGN              :=
126		23		IDENTIFIER          x
127		23		PLUS                +
128		23		IDENTIFIER          y
129		23		SEMICOLON           ;
130		24		IDENTIFIER          sumF
131		24		ASSIGN              :=
132		24		IDENTIFIER          result
133		24		SEMICOLON           ;
134		25		IDENTIFIER          sumFF
135		25		LEFT_PAREN          (
136		25		IDENTIFIER          x
137		25		COMMA               ,
138		25		IDENTIFIER          y
139		25		RIGHT_PAREN         )
140		26		END                 end
141		26		SEMICOLON           ;
142		28		BEGIN               begin
143		30		IDENTIFIER          i
144		30		ASSIGN              :=
145		30		CONST_INTEGER       10
146		30		MUL                 *
147		30		CONST_INTEGER       10
148		30		SEMICOLON           ;
149		31		IF                  if
150		31		IDENTIFIER          i
151		31		NEQ                 <>
152		31		CONST_INTEGER       0
153		32		THEN                then
154		32		IDENTIFIER          i
155		32		ASSIGN              :=
156		32		CONST_INTEGER       0
157		32		SEMICOLON           ;
158		33		IDENTIFIER          i
159		33		ASSIGN              :=
160		33		IDENTIFIER          i
161		33		PLUS                +
162		33		CONST_INTEGER       1
163		33		SEMICOLON           ;
164		34		IDENTIFIER          sum
165		34		ASSIGN              :=
166		34		CONST_INTEGER       0
167		34		MUL                 *
168		34		IDENTIFIER          i
169		34		SEMICOLON           ;
170		36		IF                  if
171		36		CONST_INTEGER       0
172		36		EQU                 =
173		36		IDENTIFIER          sum
174		37		THEN                then
175		37		IDENTIFIER          sum
176		37		ASSIGN              :=
177		37		CONST_INTEGER       1
178		38		ELSE                else
179		38		IDENTIFIER          sum
180		38		ASSIGN              :=
181		38		CONST_INTEGER       0
182		38		SEMICOLON           ;
183		42		BEGIN               begin
184		43		END                 end
185		43		SEMICOLON           ;
186		46		IDENTIFIER          i
187		46		ASSIGN              :=
188		46		CONST_INTEGER       1
189		46		SEMICOLON           ;
190		47		IDENTIFIER          sequence
191		47		LEFT_BRACKET        [
192		47		CONST_INTEGER       0
193		47		RIGHT_BRACKET       ]
194		47		ASSIGN              :=
195		47		CONST_INTEGER       0
196		47		SEMICOLON           ;
197		48		FOR                 for
198		48		IDENTIFIER          j
199		48		ASSIGN              :=
200		48		IDENTIFIER          i
201		48		TO                  to
202		48		CONST_INTEGER       10
203		48		MUL                 *
204		48		CONST_INTEGER       10
205		48		MINUS               -
206		48		CONST_INTEGER       1
207		49		DO                  do
208		50		BEGIN               begin
209		51		IDENTIFIER          sequence
210		51		LEFT_BRACKET        [
211		51		IDENTIFIER          j
212		51		RIGHT_BRACKET       ]
213		51		ASSIGN              :=
214		51		IDENTIFIER          j
215		51		PLUS                +
216		51		IDENTIFIER          sequence
217		51		LEFT_BRACKET        [
218		51		IDENTIFIER          j
219		51		MINUS               -
220		51		CONST_INTEGER       1
221		51		RIGHT_BRACKET       ]
222		52		END                 end
223		52		SEMICOLON           ;
224		53		IDENTIFIER          sequence
225		53		LEFT_BRACKET        [
226		53		CONST_INTEGER       1
227		53		RIGHT_BRACKET       ]
228		53		ASSIGN              :=
229		53		MINUS               -
230		53		IDENTIFIER          sequence
231		53		LEFT_BRACKET        [
232		53		CONST_INTEGER       1
233		53		RIGHT_BRACKET       ]
234		53		SEMICOLON           ;
235		55		IDENTIFIER          sequence
236		55		LEFT_BRACKET        [
237		55		IDENTIFIER          sequence
238		55		LEFT_BRACKET        [
239		55		CONST_INTEGER       0
240		55		RIGHT_BRACKET       ]
241		55		RIGHT_BRACKET       ]
242		55		ASSIGN              :=
243		55		IDENTIFIER          sequence
244		55		LEFT_BRACKET        [
245		55		IDENTIFIER          sequence
246		55		LEFT_BRACKET        [
247		55		CONST_INTEGER       1
248		55		RIGHT_BRACKET       ]
249		55		PLUS                +
250		55		IDENTIFIER          sequence
251		55		LEFT_BRACKET        [
252		55		CONST_INTEGER       2
253		55		RIGHT_BRACKET       ]
254		55		PLUS                +
255		55		IDENTIFIER          sequence
256		55		LEFT_BRACKET        [
257		55		CONST_INTEGER       1
258		55		PLUS                +
259		55		CONST_INTEGER       2
260		55		RIGHT_BRACKET       ]
261		55		RIGHT_BRACKET       ]
262		55		SEMICOLON           ;
263		56		IDENTIFIER          i
264		56		ASSIGN              :=
265		56		CONST_CHAR          a
266		56		SEMICOLON           ;
267		57		IDENTIFIER          i
268		57		ASSIGN              :=
269		57		CONST_INTEGER       2147483647
270		57		SEMICOLON           ;
271		58		IDENTIFIER          i
272		58		ASSIGN              :=
273		58		IDENTIFIER          ARRLEN
274		58		SEMICOLON           ;
275		59		FOR                 for
276		59		IDENTIFIER          j
277		59		ASSIGN              :=
278		59		CONST_INTEGER       100
279		59		DOWNTO              downto
280		59		CONST_INTEGER       1
281		60		DO                  do
282		61		BEGIN               begin
283		62		WRITE               write
284		62		LEFT_PAREN          (
285		62		CONST_STRING        error for "sum"
286		62		RIGHT_PAREN         )
287		62		SEMICOLON           ;
288		63		IDENTIFIER          k
289		63		ASSIGN              :=
290		63		IDENTIFIER          sumF
291		63		LEFT_PAREN          (
292		63		IDENTIFIER          i
293		63		COMMA               ,
294		63		IDENTIFIER          j
295		63		PLUS                +
296		63		IDENTIFIER          i
297		63		RIGHT_PAREN         )
298		63		SEMICOLON           ;
299		64		IDENTIFIER          sum
300		64		ASSIGN              :=
301		64		IDENTIFIER          sumF
302		64		LEFT_PAREN          (
303		64		IDENTIFIER          sum
304		64		COMMA               ,
305		64		IDENTIFIER          j
306		64		MINUS               -
307		64		IDENTIFIER          i
308		64		RIGHT_PAREN         )
309		65		END                 end
310		65		SEMICOLON           ;
311		69		CASE                case
312		69		IDENTIFIER          sum
313		69		OF                  of
314		69		CONST_INTEGER       0
315		70		COLON               :
316		70		WRITE               write
317		70		LEFT_PAREN          (
318		70		CONST_STRING        error for sum
319		70		RIGHT_PAREN         )
320		70		SEMICOLON           ;
321		70		CONST_INTEGER       5050
322		71		COLON               :
323		71		WRITE               write
324		71		LEFT_PAREN          (
325		71		CONST_STRING        right for sum
326		71		RIGHT_PAREN         )
327		72		END                 end
328		72		SEMICOLON           ;
329		74		READ                read
330		74		LEFT_PAREN          (
331		74		IDENTIFIER          sum
332		74		RIGHT_PAREN         )
333		74		SEMICOLON           ;
334		75		IDENTIFIER          sumP
335		75		LEFT_PAREN          (
336		75		IDENTIFIER          ENDCHAR
337		75		COMMA               ,
338		75		IDENTIFIER          lastChar
339		75		COMMA               ,
340		75		IDENTIFIER          sum
341		75		RIGHT_PAREN         )
342		75		SEMICOLON           ;
343		76		IDENTIFIER          sumP
344		76		LEFT_PAREN          (
345		76		IDENTIFIER          ENDCHAR
346		76		COMMA               ,
347		76		CONST_CHAR          c
348		76		COMMA               ,
349		76		IDENTIFIER          sequence
350		76		LEFT_BRACKET        [
351		76		CONST_INTEGER       3
352		76		PLUS                +
353		76		CONST_INTEGER       5
354		76		RIGHT_BRACKET       ]
355		76		RIGHT_PAREN         )
356		76		SEMICOLON           ;
357		77		WRITE               write
358		77		LEFT_PAREN          (
359		77		IDENTIFIER          sum
360		77		RIGHT_PAREN         )
361		77		SEMICOLON           ;
362		78		WRITE               write
363		78		LEFT_PAREN          (
364		78		IDENTIFIER          sequence
365		78		LEFT_BRACKET        [
366		78		IDENTIFIER          j
367		78		PLUS                +
368		78		CONST_INTEGER       1
369		78		PLUS                +
370		78		CONST_INTEGER       2
371		78		RIGHT_BRACKET       ]
372		78		RIGHT_PAREN         )
373		80		END                 end
374		80		PERIOD              .
