TokenNumber	LineNumber	TokenType	    TokenValue
1		1		VAR                 var
2		1		IDENTIFIER          n
3		1		COMMA               ,
4		1		IDENTIFIER          result
5		1		COLON               :
6		1		RW_INTEGER          integer
7		1		SEMICOLON           ;
8		2		FUNCTION            function
9		2		IDENTIFIER          fib
10		2		LEFT_PAREN          (
11		2		IDENTIFIER          k
12		2		COLON               :
13		2		RW_INTEGER          integer
14		2		RIGHT_PAREN         )
15		2		COLON               :
16		2		RW_INTEGER          integer
17		2		SEMICOLON           ;
18		3		BEGIN               begin
19		4		IF                  if
20		4		IDENTIFIER          k
21		4		EQU                 =
22		4		CONST_INTEGER       0
23		4		THEN                then
24		5		IDENTIFIER          fib
25		5		ASSIGN              :=
26		5		CONST_INTEGER       1
27		6		ELSE                else
28		7		BEGIN               begin
29		8		IF                  if
30		8		IDENTIFIER          k
31		8		EQU                 =
32		8		CONST_INTEGER       1
33		8		THEN                then
34		9		IDENTIFIER          fib
35		9		ASSIGN              :=
36		9		CONST_INTEGER       1
37		10		ELSE                else
38		11		IDENTIFIER          fib
39		11		ASSIGN              :=
40		11		IDENTIFIER          fib
41		11		LEFT_PAREN          (
42		11		IDENTIFIER          k
43		11		MINUS               -
44		11		CONST_INTEGER       1
45		11		RIGHT_PAREN         )
46		11		PLUS                +
47		11		IDENTIFIER          fib
48		11		LEFT_PAREN          (
49		11		IDENTIFIER          k
50		11		MINUS               -
51		11		CONST_INTEGER       2
52		11		RIGHT_PAREN         )
53		11		SEMICOLON           ;
54		13		END                 end
55		14		END                 end
56		14		SEMICOLON           ;
57		16		BEGIN               begin
58		17		WHILE               while
59		17		IDENTIFIER          n
60		17		GEQ                 >=
61		17		CONST_INTEGER       0
62		17		DO                  do
63		18		BEGIN               begin
64		19		WRITE               write
65		19		LEFT_PAREN          (
66		19		CONST_STRING        Please enter a number n which is larger than 0: 
67		19		RIGHT_PAREN         )
68		19		SEMICOLON           ;
69		20		READ                read
70		20		LEFT_PAREN          (
71		20		IDENTIFIER          n
72		20		RIGHT_PAREN         )
73		21		END                 end
74		21		SEMICOLON           ;
75		24		WRITE               write
76		24		LEFT_PAREN          (
77		24		CONST_STRING        Fib(n) is: 
78		24		RIGHT_PAREN         )
79		24		SEMICOLON           ;
80		25		IDENTIFIER          result
81		25		ASSIGN              :=
82		25		IDENTIFIER          fib
83		25		LEFT_PAREN          (
84		25		IDENTIFIER          n
85		25		RIGHT_PAREN         )
86		25		SEMICOLON           ;
87		26		WRITE               write
88		26		LEFT_PAREN          (
89		26		IDENTIFIER          result
90		26		RIGHT_PAREN         )
91		26		SEMICOLON           ;
92		28		END                 end
93		28		PERIOD              .
